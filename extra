https://code.visualstudio.com/ >Install
https://nodejs.org/en > Install
https://git-scm.com/downloads > Install
https://github.com/ > Signup
https://github.com/Aakashdeveloper > Follow

//Extensions
> code spell checker
> git history
> git lens
> vscode-icons
> ES7+ React/Redux/React-Native snip


//Prerequest
Html
CSS
Basic JavaScript
(ifelse,function,loop,array,object,variable)

Npm
React = 3
Mock API> Dummy Api
json-server
React_hooks -1
loginapp
HOC
Deployment
-> MERN
-> Netlify
//////////////////////////////
Github

-> Aws
-> Docker
-> Nginx
React-GraphQL-1
React-Redux =1

Basic React Native=1
Testing Jest Enzime
///////Walkthrough///////
React-Saga -1

--------NOT Backend--------------
API
> GraphQL
> Login/Logout
> Zomato


244562

npm
> node package manager

JSON
JavaScript Object notation
Way to represent the data
Key:value pair of data

var movieName = "Avengers"
var movieRating = 4.5
var movieInd = "Hollywood"

var movieName1 = "Death Race"
var movieRating1 = 4.2
var movieInd1 = "Hollywood"

var movies = [
    {
        "movieName": "Avengers",
        "movieRating": 4.5,
        "movieInd" : "Hollywood"
    },
    {
        movieName: "Death Race",
        movieRating: 4.2,
        movieInd : "Hollywood",
        movieType: "Action"
    }
]

movies[0].movieName

//////////////////////
Package.json
> Starting point of app
> packages that is required for app
> scripts (start,build,test)
> meta data(name,version,description)

//step to generate Package.json
*NodeJs must be install
> open the cmd / terminal and go inside the folder
> npm init
> answer all questions
> type yes


//step to install Packages
*NodeJs must be install
> open the cmd / terminal and go inside the folder
> npm install packagename/ npm i packagename
  npm i packagename@1.4.4


package-lock.json
> contains dependency tree

.gitignore
> ignore the thing we don't want to push


//////////
step to generate react app
/////////
* One Time
# window
> open cmd as admin
> npm i -g create-react-app

* Next everytime you want to generate new app
> open cmd 
> go inside the folder where you want new app
> create-react-app appname

# Mac/linux
> open terminal
> sudo npm i -g create-react-app

* Next everytime you want to generate new app
> open terminal 
> go inside the folder where you want new app
> create-react-app appname

-----------------------
* with npx
> open cmd/terminal
> go inside the folder where you want new app
> npx create-react-app appname


//////////
step to run react app
/////////
> open cmd / terminal
> go inside the folder where you app
> npm start
* default port 3000

react > Main Package of the app
react-dom > help to render the content
react-script > help to run the application


React
> React is frontend lib which help to build single page application using component
based structure


component
* Class
> Logical Component
> Can have state
> Can also use for display purpose

* functional
> dumb component
> only use for display purpose


> Hooks Component

////////////////
State
> it act like a local variable
> every component can have its own state
> We can update the value of state
> With every state change component will re-render

Props
> Help to transfer the data between the components
> Data Can only Transfer between the nested components




Es5
> Ecma Script 5
Es6
> Ecma Script 6


//es5
function add(a,b){
    return a+b
}

add(1,2)
3

//es6
const add = (a,b) => {
    return a+b
}



function add(a,b){
    let data = [a,b]
    return data
}

add(1,2)


id
class
tagName

////JavaScript
map
filter
indexof



var a = [0,1,2,3]
a.map((data) => {return data*2})
[0, 2, 4, 6]


var a = [10,9,5,3,6,1,7]
a.filter((data) => {return data>5})
 [10, 9, 6, 7]


var a = [0,1,2,3]
a.filter((data) => {return data*2})
[1, 2, 3]


var a =10

a>10
a<=1
a!=1


if(a>10){

}else{
    
}

if(true){

}else{
    
}


parent > child (Props)
child > parent (props with function)

function add(a,b){
    return a+b
}


add(1,2)

var city = ["Delhi","AmsterDam","London","Venice"]
undefined
city.indexOf('Delhi')
0
city.indexOf('London')
2
city.indexOf('Venice')
3
city.indexOf('Innsburg')
-1
city.indexOf('Pune')
-1


params
> what we pass after /
> it is complusory to define
> if defined then complusory to pass
> Usually use for 1 or 2 values

queryParams
> what we pass after ?
> no need to define
> not complusory to pass
> use for passing multiple values


history > Redirection
location > QueryParams
match > Params


let a = "?page=1&cost=100"
undefined
a.split('&')
(2) ['?page=1', 'cost=100']
a.split('&')[1].split('=')[1]
'100'
a.split('&')[0].split('=')[1]
'1'


(get) cityname >           http://3.17.216.66:4000/location
(get) restwrtcity >        http://3.17.216.66:4000/restaurant?stateId=1
(get) quickSearch>         http://3.17.216.66:4000/quicksearch

(get) onbasisofMeal >      http://3.17.216.66:4000/restaurant?mealtype_id=
(get) cuisinefilter >      http://3.17.216.66:4000/filter/4?cuisine=1
(get) costfilter >         http://3.17.216.66:4000/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://3.17.216.66:4000/details/1
(get) menu >               http://3.17.216.66:4000/menu/1

(post) orderspage >        http://3.17.216.66:4000/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         http://3.17.216.66:4000/restaurants


//es5
var a = 10
var b = "my age is "+a
"my age is 10"

//es6
var a = 10
var b = `my age is ${a}`
"my age is 10"


test(a){}


async function test(){
    
}


const test = async() => {}


let image_gallery= [
    {"link1":"https://b.zmtcdn.com/data/pictures/chains/3/143/fbc2c4c9e55a3f011c493dda79c399f5.jpg"},
    {"link2":"https://b.zmtcdn.com/data/pictures/chains/3/143/fbc2c4c9e55a3f011c493dda79c399f5.jpg"},
      
    ]

var a = [1,2,2,4,6,2]
undefined
a.indexOf(4)
3
a.splice(3,0)
[]
a
(6) [1, 2, 2, 4, 6, 2]
a.splice(3,1)
[4]
a
(5) [1, 2, 2, 6, 2]
a.splice(1,1)
[2]
a.splice(1,1)
[2]
a
(3) [1, 6, 2]
a.splice(2,1)
[2]
a
(2) [1, 6]
a.splice(4,1)
[]
a
(2) [1, 6]
a
(2) [1, 6]
a.indexOf(2)
-1
a.splice(-1,1)
[6]
a
[1]

//////
dummy api
////////////////////////////////
> open cmd as admin (one time)
npm i -g json-server

> open cmd
> go in folder where you have json
> json-server --watch order.json --port 9112


# GetAllUser
* (GET)> http://3.17.216.66:5000/api/auth/users

# Register
* (POST)> http://3.17.216.66:5000/api/auth/register 
(body) => {"name":"Aakash","email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

# Login
* (POST) => http://3.17.216.66:5000/api/auth/login 
(body) => {"email":"aa@gmail.com","password":"12345678"} 
(response)=> {auth:true,token:'dgsdg'}

# UserInfo (GET) => http://3.17.216.66:5000/api/auth/userinfo
* (Header) => {'x-access-token':'token value from login'}


var a = [1,2,3]
var b = [...a,4,5,6]
[1,2,3,4,5,6]


npm run build